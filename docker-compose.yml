version: "3.8"
services:
  user:
    build: ./backend/user
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    volumes:
      - ./backend/user:/app
  money:
    build: ./backend/money
    ports:
      - "3001:3001"
    depends_on:
      - mongo
    volumes:
      - ./backend/money:/app
  frontend:
    build: ./frontend
    ports:
      - "3002:80"
    volumes:
      - ./frontend:/frontend
  money-stream:
    build: ./backend/money-stream
    ports:
      - "3003:3003"
    volumes:
      - ./backend/money-stream:/app
  leadersboard:
    build: ./backend/leadersboard
    ports:
      - "3004:3004"
    volumes:
      - ./backend/leadersboard:/app
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - data-db:/data/db
  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
  hk-kafka:
    image: spotify/kafka
    ports:
      - "2181:2181"
      - "9092:9092"
    hostname: 192.168.0.21
    container_name: kafka
    environment:
      - "ADVERTISED_HOST=192.168.0.21"
      - "ADVERTISED_PORT=9092"
      - "AUTO_CREATE_TOPICS=true"
      - "CONSUMER_THREADS=1"
      - "TOPICS=money6-topic"
      - "ZK_CONNECT=192.168.0.21:2181"
      - "GROUP_ID=money-group"
  # command: >
  #   bash -c
  #   "(sleep 15s &&
  #   /opt/kafka_2.11-0.10.1.0/bin/kafka-topics.sh
  #   --create
  #   --zookeeper
  #   localhost:2181 --replication-factor 1 --partitions 1
  #   --topic money6-topic &) && (supervisord -n)"


  # zookeeper:
  #   image: wurstmeister/zookeeper:3.4.6
  #   container_name: kafka-nodejs-example-zookeeper
  #   ports:
  #     - 2181:2181
  #   volumes:
  #     - /docker/zookeeper:/opt/zookeeper-3.4.13/data
  # kafka:
  #   image: wurstmeister/kafka:2.11-1.1.0
  #   container_name: kafka-nodejs-example-kafka
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ADVERTISED_HOST_NAME: 192.168.0.21
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #   ports:
  #     - 9092:9092
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /docker/kafka:/kafka
volumes:
    data-db: